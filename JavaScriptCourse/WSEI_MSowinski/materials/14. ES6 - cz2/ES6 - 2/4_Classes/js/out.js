(()=>{"use strict";let e=[];class s{constructor(e,s,o,t){this.name=e,this.protein=s,this.carbs=o,this.fat=t,this.print=()=>{console.log(`Name: ${this.name}: proteins: ${this.protein}g, carbs: ${this.carbs}g, fat: ${this.fat}g`)}}}class o extends s{}class t extends s{}let n=document.querySelector("form");const c=n.querySelector("#name"),l=n.querySelector("#proteins"),a=n.querySelector("#carbs"),r=n.querySelector("#fat"),u=n.querySelector("#add"),i=document.querySelector("#products");u.addEventListener("click",(s=>{if(s.preventDefault(),isNaN(l.value)||isNaN(a.value)||isNaN(r.value))return void console.log("error");if(4*l.value+4*a.value+9*r.value>250){c.value="fastFood";const s=new o(c.value,l.value,a.value,r.value);e.push(s)}else{c.value="fatFreeFood";const s=new t(c.value,l.value,a.value,r.value);e.push(s)}let n=document.createElement("li");n.innerText=`${c.value}: proteins: ${l.value}g, carbs: ${a.value}g, fat: ${r.value}g`,i.appendChild(n),console.log(e)})),e.push(new o("Fries",3.4,41,15)),e.push(new o("Donut",4.9,51,25)),e.push(new t("Greek Yogurt",10,3.6,.4));class h{constructor(e,s){this.menuType=e,this.menuElements=s}getType(){console.log(this.menuType)}showItems(){console.log(...this.menuElements)}}new class extends h{}("horizontal",["start","about"]);let p=new class extends h{anime(){console.log("animacja menu typu: ",this.menuType)}}("vertical",["home","contact"]);{console.log("preparation task");class e{constructor(e){this.name=e}doAction(e){console.log(e)}}class s extends e{constructor(e){super(e)}boating(){super.doAction("Sail on a boat")}}class o extends e{constructor(e){super(e)}driving(){super.doAction("Drive a car")}}class t extends e{constructor(e){super(e)}flying(){super.doAction("Fly by plane")}}(new s).boating(),(new o).driving(),(new t).flying()}{console.log("\ntask 01 and task 04");class e{constructor(){this.type="common duck"}quack(){console.log("quack quack")}swim(){console.log("i`m swimming...")}show(){console.log("looks like "+this.type),this.fly()}fly(){console.log("i`m flying...")}}const s=new e;s.quack(),s.swim(),s.show(),console.log("\ntask 02");class o extends e{constructor(){super(),this.type="wild duck"}}const t=new o;t.quack(),t.swim(),t.show(),console.log("\ntask 03");class n extends e{constructor(){super(),this.type="crossed duck"}}const c=new n;c.quack(),c.swim(),c.show(),console.log("\ntask 05");class l extends e{constructor(){super(),this.type="gum duck",this.fly=()=>console.log("gum duck doesn`t know how to fly")}}const a=new l;a.quack(),a.swim(),a.show()}e.forEach((e=>e.print())),p.anime(),p.getType(),p.showItems()})();